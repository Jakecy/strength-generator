package ${package}.${moduleName}.controller;

import java.util.Arrays;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.util.List;

import ${package}.${moduleName}.entity.${className};
import ${package}.${moduleName}.service.${className}Service;




/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@RestController
@RequestMapping("/${pathName}")
public class ${className}Controller {
    @Autowired
    private ${className}Service ${classname}Service;


    @ApiOperation(value = "保存", httpMethod = "POST", notes = "保存")
    @RequestMapping(value = "/save", method = RequestMethod.POST, produces = "application/json;charset=utf-8")
    public Result<Boolean> save(@RequestBody Object po) {
        Boolean result = ${classname}Service.save(po);
        return new Result<Boolean>().ok(result);
    }

    @ApiOperation(value = "删除", httpMethod = "GET", notes = "删除")
    @RequestMapping(value = "/removeById", method = RequestMethod.GET)
    public Result<Boolean> removeById(@RequestParam Long id) {
        Boolean result = ${classname}Service.removeById(id);
        return new Result<Boolean>().ok(result);
    }


    @ApiOperation(value = "修改", httpMethod = "POST", notes = "修改")
    @RequestMapping(value = "/modifyById", method = RequestMethod.POST, produces = "application/json;charset=utf-8")
    public Result<Boolean> edit(@RequestBody Object po) {
        Boolean result = ${classname}Service.edit(po);
        return new Result<Boolean>().ok(result);
    }

    @ApiOperation(value = "查询详情", httpMethod = "GET", notes = "查询详情")
    @RequestMapping(value = "/queryDetail", method = RequestMethod.GET)
    public Result<Object> queryDetail(@RequestParam Long id) {
        Object result = ${classname}Service.queryDetail(id);
        return new Result<Object>().ok(result);
    }

    @ApiOperation(value = "分页-查询所有", httpMethod = "POST", notes = "分页-查询所有")
    @RequestMapping(value = "/queryPage", method = RequestMethod.POST, produces = "application/json;charset=utf-8")
    public Result<GenericPage<Object>> queryPage(
            @RequestParam(value = "pageNo", defaultValue = "1") Integer pageNo,
            @RequestParam(value = "pageSize", defaultValue = "10") Integer pageSize,
            @RequestBody(required = false) Object po) {
        GenericPage<Object> result =   ${classname}Service.queryPage(pageNo, pageSize, po);
        return new Result<GenericPage<Object>>().ok(result);
    }

    @ApiOperation(value = "查询不分页", httpMethod = "POST", notes = "查询不分页")
    @RequestMapping(value = "/queryList", method = RequestMethod.POST, produces = "application/json;charset=utf-8")
    public Result<List<Object>> queryList(
            @RequestBody(required = false) Object po) {
        List<Object> result =  ${classname}Service.queryList(po);
        return new Result<List<Object>>().ok(result);
    }


}
